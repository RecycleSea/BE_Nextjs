generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(cuid())
  email             String    @unique
  password          String?
  name              String?
  isEmailVerified   Boolean   @default(false)
  emailVerifiedAt   DateTime?
  googleId          String?   @unique
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  // Relations
  otpCodes          OtpCode[]
  resetTokens       ResetToken[]
  refreshTokens     RefreshToken[]
  
  @@map("users")
}

model OtpCode {
  id        String   @id @default(cuid())
  code      String
  email     String
  userId    String?
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("otp_codes")
}

model ResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("reset_tokens")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("refresh_tokens")
}

model SeaReport {
  id        Int      @id @default(autoincrement())
  title     String
  description String
  location  String
  createdAt DateTime @default(now())
}
